###########################################################################################################
root@node1:~# Ctrl +  l  # == clear
-----------------------------------------------------------------------------
root@node1:~# ssh -t -A node2 ssh node3  # подключиться с первой ноды, через вторую, на третью
root@node1:~# ssh -f -N -L 9906:127.0.0.1:3306 node3(sql server)  # проброс порта 3306 на наш локальный сервер в порт 9906, где -N == мы не выполняем команду на удаленной машине, -L == выполняем на локальной
root@node1:~# mysql -u root -p -h 127.0.0.1 -P 9906  # подключаемся к sql на удаленной ноде с помощью проброшенного порта через ssh
root@node1:~# netstat -ntulp  # вывод прослушиваемых портов (PID/Program name)
root@node1:~# kill -9 PID  # отключить проброс   
root@node1:~# ssh -f -N -R 2255:localhost:22 testserver  # проброс порта на удаленный сервер, где -R == remote host. 2255 - удаленный порт, пробрасывается на локальный порт 22.
root@node1:~# ssh -D 8080 -q -C -N -f node3  # проброс socks-proxy с локального сервера на node3, где -q == quiet режим, 
root@node1:~# curl -x socks5h://localhost:8080 https://mail.ru  # запрос страницы mail.ru при помощи socks-proxy
root@node1:~# nc -vnz 10.159.0.12 22-55  # где 22-55 диапозон сканируемых портов
-----------------------------------------------------------------------------
root@node1:~# nc -l 4444  # listen 4444 port
root@node3:~# nc node1 4444  # connect to node1 via nc to 4444 port (получаем чат)
-----------------------------------------------------------------------------
root@node1:~# cat test_file | pv -b | nc -l 4444  # передаем test_file в nc на к-й слушает порт 4444 через pv -b (показывает сколько байт было передано)
root@node3:~# nc node1 4444 > pv -b > test_file3  # принимаем test_file (называть можно как угодно) на node3
-----------------------------------------------------------------------------
root@node1:~# tar -czf - /root/tmp | pv -b | nc -l 4444  # архивируем налету и отправляем через nc
root@node3:~# nc node1 4444 | pv-b > file.tar.gz  # принимаем
-----------------------------------------------------------------------------
root@node1:~# socat -u FILE:test_file TCP-LISTEN:5778,reuseaddr  # указываем файл, указываем на каком порту слушать, указываем реиспользовать адреса
root@node3:~# socat -u TCP: 192.168.1.48:5778 STDOUT | pv -r > test_file 123  # указываем к какому хосту, к какому порту подключаемся. Перенаправляем в STDOUT, в pv, в файл
-----------------------------------------------------------------------------
root@node1:~# socat TCP-LISTEN:80, fork TCP:node3:80  # пробросить удаленный порт локально. указываем что слушаем 80 порт, указываем тип процесса форк
root@node1:~# curl localhost  
-----------------------------------------------------------------------------
root@node1:~# socat TCP-LISTEN:1234,reuseaddr EXEC:/bin/bash  # пробросить shell
root@node3:~# socat - TCP:192.168.1.48:1234 # подключаемся
-----------------------------------------------------------------------------



Fail2ban
socks proxy
rsync














