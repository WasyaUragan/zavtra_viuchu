###
=======================================
Ovirt 
=======================================
Виртуализация — предоставление набора вычислительных ресурсов или их логического объединения, независимое от аппаратной реализации и обеспечивающее при этом логическую изоляцию друг от друга вычислительных процессов, выполняемых на одном физическом ресурсе.
---------------------------------------
Под капотом — гипервизор KVM, для управления используется веб-интерфейс. Базируется на ОС RHEL/CentOS
---------------------------------------
KVM (Kernel-based Virtual Machine) — гипервизор (VMM – Virtual Machine Manager), работающий в виде модуля на ОС Linux. Гипервизор нужен для того, чтобы запускать некий софт в несуществующей (виртуальной) среде и при этом, скрывать от этого софта реальное физическое железо, на котором этот софт работает. Гипервизор работает в роли «прокладки» между физическим железом (хостом) и виртуальной ОС (гостем).

KVM очень быстрый, но его самого по себе недостаточно для запуска виртуальной ОС, т.к. для этого нужна эмуляция I/O. Для I/O (процессор, диски, сеть, видео, PCI, USB, серийные порты и т.д.) KVM использует QEMU.
---------------------------------------
Программное обеспечение KVM состоит из загружаемого модуля ядра (называемого kvm.ko), предоставляющего базовый сервис виртуализации, процессорно-специфического загружаемого модуля kvm-amd.ko либо kvm-intel.ko, и компонентов пользовательского режима (модифицированного QEMU). 
---------------------------------------
QEMU (Quick Emulator) — свободная программа с открытым исходным кодом для эмуляции аппаратного обеспечения различных платформ.

Инструкции/бинарный код (напр. ARM) конвертируются в промежуточный платформонезависимый код при помощи конвертера TCG (Tiny Code Generator) и затем, этот код конвертируется в целевые инструкции (напр. x86).

ARM --> промежуточный код --> x86

По сути, вы можете запускать виртуальные машины на QEMU на любом хосте, даже со старыми моделями процессоров, не поддерживающими Intel VT-x (Intel Virtualization Technology) / AMD SVM (AMD Secure Virtual Machine). Однако в таком случае, это будет работать весьма медленно, в связи с тем, что исполняемый бинарный код нужно перекомпилировать на лету два раза, при помощи TCG (TCG – это Just-in-Time compiler).
---------------------------------------
Больше актуально для х32

Бинарный программный код на процессорах работает не просто так, а располагается на разных уровнях (кольцах / Protection rings) с разными уровнями доступа к данным, от самого привилегированного (Ring 0), до самого ограниченного, зарегулированного и «с закрученными гайками» (Ring 3).

С появлением Intel VT-x / AMD SVM, был создан специальный новый уровень Ring -1 (минус один). И теперь на нем работает гипервизор, а гости работают на Ring 0 и получают привилегированный доступ к CPU.

Т.е. в итоге:

хост - Ring 0
гости - Ring 0
гипервизор - Ring -1
драйвера - Ring 1, 2
приложения - Ring 3
---------------------------------------
KVM предоставляет доступ гостям к Ring 0 и использует QEMU для эмуляции I/O (процессор, диски, сеть, видео, PCI, USB, серийные порты и т.д., которые «видят» и с которыми работают гости).
---------------------------------------
libvirt - это интерфейс и демон для управления виртуальными машинами различных технологий (qemu/kvm, xen, virtualbox)
---------------------------------------
https://www.ovirt.org/develop/developer-guide/ui-plugin-tutorial.html
Директория с плагинами:
/usr/share/ovirt-engine/ui-plugins/space-shooter.json - plugin descriptor
/usr/share/ovirt-engine/ui-plugins/space-shooter-resources/game/* - game files
--------------

























