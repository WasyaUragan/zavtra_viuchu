##
list.append(item)  # Добавляет один элемент в конец списка.Возвращает None.
item — элемент, который будет добавлен.
--------------------------------------------------------------------------------------
list.extend(iterable)  # Добавляет все элементы итерируемого объекта (списка, кортежа, строки и т. д.) в конец списка. Возвращает None.
iterable — итерируемый объект, элементы которого будут добавлены в список.
--------------------------------------------------------------------------------------
Вы также можете добавить все элементы итерируемого объекта в список, используя:
1. Оператор «+»:
a = [1, 2]
b = [3, 4]
a += b  
# Output: [1, 2, 3, 4]
--------------------------------------------------------------------------------------
2. Слайсы / Срезы:
a = [1, 2]
b = [3, 4]
a[len(a):] = b
# Output: [1, 2, 3, 4]
Слайс задается тройкой чисел, разделенных запятой: start:stop:step. При этом необходимо помнить, что выборка не включает элемент определяемый stop.
Слайсы можно сконструировать заранее, а потом уже использовать по мере необходимости. Это возможно сделать, в виду того, что слайс – это объект класса slice. 
s = slice(0, 5, 1)
a[s]
[0, 1, 2, 3, 4]
--------------------------------------------------------------------------------------
list.insert(index, element)  # Добавляет элемент в список по указанному индексу.Возвращает None.
index – позиция (индекс), на которую будет помещен указанный элемент. Нумерация начинается с нуля. Также поддерживается отрицательная индексация.
element — элемент, который нужно поместить в список.
--------------------------------------------------------------------------------------
list.remove(element)  # Удаляет первый найденный в списке элемент, значение которого соответствует значению, переданному в качестве аргумента. Возвращает None.
element — элемент, который будет удален из списка. Если элемент в списке не найден, то возбуждается исключение ValueError.
Если список содержит повторяющиеся элементы, метод remove() удаляет только первое вхождение заданного элемента в списке.
Если нужно удалить элемент по индексу или вернуть значение удаляемого элемента, используйте list.pop().
--------------------------------------------------------------------------------------
list.pop([index])  # Удаляет элемент по указанному индексу из списка и возвращает удаленный элемент.Возвращаемое значение: Элемент [по указанному индексу], который был удален из списка.
index — индекс искомого элемента в списке (целое число). Если индекс не указан, то удаляется последний элемент списка. Индексация начинается с нуля. Также поддерживается отрицательная индексация. Если индекс, переданный методу, вне диапазона списка, то возбуждается исключение IndexError.
Если нужно удалить элемент из списка не возвращая его, используйте list.remove().
Также вы можете использовать инструкцию del для удаления  элементов или срезов из списка.
--------------------------------------------------------------------------------------
list.clear()  # Удаляет все элементы из списка. Возвращает None.
Также для удаления всех элементов из списка можно использовать инструкцию del:
list = [{1, 2}, ('a'), ['1.1', '2.2']]
del list[:]
# Output: List: []
--------------------------------------------------------------------------------------



























