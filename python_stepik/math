######################################################################################
Moduls
======================================================================================
from math import *  # import module with all finctions 
from math import sqrt, ceil  # import some functions from a module
--------------------------------------------------------------------------------------
При подключении модуля (import Math  или from Math import *), при запуске программы,  в ваш код (тот, который Вы сами написали) дополнительно копируется код из модуля Math. Модуль - это тоже, просто, файл с кодом, описывающим функции (sqrt(), floor() и т.д). Так вот: если в вашем коде, например. есть переменная по имени "x" и в коде у модуля есть переменная  "x" - то могут появиться ошибки при запуске вашей программы, так как одна из переменных перезапишет другую.   

В случае если вы подключите модуль через import Math ошибки исключаются, так как содержащаяся в нём  переменная по имени "x" переписывыется в ваш файл под иминем "math.x".

Так же, если Вы импортируете только выбранные функции, например sqrt() и  floor()  с помощью строки  from Math import sqrt, floor то при запуске вашей программы в ваш файл из файла модуля перепишется только код этих функций (без math.) и если Вы сами в своём коде до этого не написали функций с именами sqrt() и  floor() , то при запуске ошибок не будет.
--------------------------------------------------------------------------------------
Стоит отметить, что использование * при импорте не очень желательно и вроде как даже считается дурным тоном. При желании имя импортируемого модуля можно сократить таким образом:
import math as m
--------------------------------------------------------------------------------------
round(x) 
Округляет число x до ближайшего целого. Если дробная часть числа равна 0.5, то число округляется до ближайшего четного числа
round(x, n)
Округляет число x до n знаков после точки
--------------------------------------------------------------------------------------
math.sqrt(n) == n ** 0.5  # извлечение квадратного корня
--------------------------------------------------------------------------------------
pow(x, n) == Возведение числа x в степень n
--------------------------------------------------------------------------------------
Список констант модуля math
pi	Число \pi = 3.141592653589793π=3.141592653589793
e	Число e = 2.718281828459045 (константа Эйлера)
--------------------------------------------------------------------------------------
Все функции модуля math возвращают значение, которое можно вывести на экран, присвоить другой переменной или использовать в математическом выражении.
--------------------------------------------------------------------------------------
Для использования функций int(), float(), abs(), min(), max(), round() подключать модуль math нет необходимости. Это так называемые встроенные функции.
--------------------------------------------------------------------------------------































