Тэги бывают открытые и закрытые.
<!-- так обозначают коммент в html -->

Объявление типа документа:
<!doctype html>

Простейшая HTML-страница состоит как минимум из трёх тегов: <html>, <head> и <body>.
Тег <html> располагается в документе сразу после доктайпа и содержит все остальные теги, включая <head> и <body>.

Важный тег, который включается в <head> — тег <meta>. Он одиночный.
С помощью <meta> можно сообщать различную служебную информацию.
Вот некоторые из атрибутов: charset, content, http-equiv, name и scheme.

<head>
<meta charset="название кодировки">
<title>заголовок страницы</title>
</head>

Заголовки
Для создания основной структуры текста используют заголовки от <h1> до <h6>.
«h» в названии тега — это первая буква английского «heading».

Параграфы
Более мелкую структуру текста выстраивают с помощью параграфов (или абзацев).
«р» в названии тега — это первая буква английского «paragraph».
По умолчанию параграфы начинаются с новой строки и отделяются от остального контента отступами сверху и снизу. 

Вложенные теги
Теги могут вкладываться друг в друга. Вложенный тег не может закрываться позже родительского.

Ссылки
Контент между тегами <a> и </a> — гиперссылка.

Атрибуты
Для дополнительных сведений у тегов есть атрибуты.
Имя атрибута говорит браузеру, какой признак нужно поменять, а значение — каким этот признак должен стать.
<a href="значение атрибута">текст ссылки</a>
Атрибут встраивается в открывающий тег.
Если значение атрибута не содержит пробелов, кавычками можно пренебречь.

Необязательные атрибуты
Помимо непременного href, тег a может иметь необязательный атрибут target (англ. target, «мишень»). Он «нацеливает» браузер, указывая вкладку, где нужно открыть страницу, на которую ведёт ссылка. Без атрибута target она откроется в текущей вкладке.

Если добавлен атрибут target со значением “_blank” (от англ. blank, «чистый»), то другая страница будет показана в новой вкладке.
<a href="значение атрибута" target="_blank">текст ссылки</a>

Адреса веб-страниц (URL- Uniform Resource Locator)
Полный URL-адрес состоит из трех частей: протокола, имени сайта и абсолютного пути к файлу или ресурсу.

http://site.ru/images/
Когда сервер получает запрос имени каталога, а не определенного фай­ла, он ищет в нем документ, заданный по умолчанию, обычно с именем index.html.
Имя файла, заданного по умолчанию (также называемого индексным файлом), может меняться и зависит от того, как сконфигурирован сервер.

Чтобы создать внешнюю ссылку, необходимо указать абсолютный URL-адрес, начинающийся с символов http:// (с прото­кола).

Относительные ссылки — те, что обращаются к какой-либо странице на том же сервере.
Если браузер не находит в ссылке символов «http://» , он выполняет поиск указанного документа на том же сервере.
Относительный путь задаем как в linux.

Ссылки на определенную позицию страницы называют якорями.

Установлен якорь с именем season1 на тег <p>: 
<p id="season1">Зима́ — одно из четырёх времён года, между осенью и весной.</p>
Для обозначения ссылки на фрагмент перед его именем ставим хеш-символ (#),
<a href="#season1">Зима</a>

Ссылка на описание зимы на странице из другого документа в том же каталоге:
<а href="seasons.html#season2">Зима</а>

Почтовая ссылка:
<a href="mailto:mail@me.ru">Отправить письмо</a>

Ссылка с номером телефона:
<a href="tel:+7 495 051">Телефон доверия</a>

Ссылка на телегу:
<a href="tg://resolve?domain=NikName">Написать кому-то в Telegram</a>

Списки:

Маркированный или неупорядоченный - набор пунктов, очередность которых не­ важна

<ul>
    <li>Булгаков</li>
    <li>Достоевский</li>
</ul>

Нумерованный или упорядоченный - перечень, в котором последовательность элементов имеет значение

<ol start="0">
    <li>Булгаков</li>
    <li>Достоевский</li>
</ol>

Список определений. Состоит из пар «имя/значение».
Весь список размечен с по­мощью элемента <dl>. Его содержимое — это несколько элементов <dt>, обозначающих имена, и <dd>, обозначающих соответствующие им значе­ния. 

<dl>
  <dt>Элемент списка</dt>
    <dd>Значение</dd>
  <dt>Элемент списка</dt>
    <dd>Значение</dd>
</dl>

Все элементы списков являются блочными по умолчанию, поэтому они начинаются с новой строки, а над элементом и под ним остается пустое пространство, это можно изменить с помощью CSS.

Любой список может быть вложен в другой.

<ol>
    <li>Русские писатели
      <ul>
        <li>Михаил Булгаков</li>
        <li>Федор Достоевский</li>
      </ul>
    </li>
    <li>Зарубежные писатели
      <ul>
        <li>Теодор Драйзер</li>
        <li>Джек Лондон</li>
      </ul>
    </li>
  </ol>

  При вложении одного мар­кированного списка в другой браузер автоматически меняет стиль маркера для списка второго уровня.

Горизонтальная линия - тематический раз­рыв на уровне абзаца с помощью элемента <hr>.
Элемент <hr> — пустой.

Тэги для форматирования текста:

<b>Жирное начертание</b> — является тегом физической разметки и устанавливает жирный текст
<strong>Жирное начертание</strong> — тег логической разметки, определяет важность помеченного текста
<i>Курсив</i>
<em>Курсив</em>
<sup>Верхний индекс</sup>
<sub>Нижний индекс</sub>
<br>Перенос строки

Любые теги форматирования текста можно использовать совместно друг с другом.

Изображения размещаются на веб-страницах двумя способами: как внутренний контент и как повторяющиеся фоновые изображения.

Все изображения для сайтов, подразделяются:
 - растровые (пример — JPG, JPEG, PNG, GIF),
 - векторные (пример — SVG).

 Растровые изображения состоят из пикселей, в которых хранится цвет и значение прозрачности. 
 Основной минус – они плохо масштабируются.

 Векторные изображения состоят из линий и точек маршрутов. Информация об изображении хранится в математических инструкциях по отрисовке, что позволяет масштабировать такие изображения сколько угодно без потери качества.

 Элемент<img>указывает браузеру: «Вставь изображение сюда». 
 <img src="image.jpg" alt="Описание изображения">
 Атрибуты src (URL-путь к файлу с изображением) и alt (замещающий текст, который отображается на странице, если изображение недоступно) являются обязательными.

 Атрибуты width и height задают размеры изображения, измеряемые по умолчанию в количестве пикселей. 
 <img src="apple.jpg" width="400" height="400" alt="Яблоко">
 Если установлена процентная запись, то размеры изображения вычисляются относительно родительского элемента — контейнера, где находится тег <img>.
 В случае отсутствия родительского контейнера, в его качестве выступает окно браузера.

Минимальная структура таблицы
<table>
<caption>Пищевая ценность</caption>  <!-- заголовок таблицы -->
<tr>  <!-- tr, сокращение от table row — строка таблицы -->
  <th>Блюда</th>
  <th>Калории</th>  <!-- th, сокращение от table headers — заголовки таблицы -->
  <th>Жиры (г)</th>	
</tr>
<tr>	
  <td>Куриный бульон</td>
  <td>120</td>  <!-- td, сокращение от table data — данные таблицы -->
  <td>2</td>
</tr>
<tr>
  <td>Салат цезарь</td>	
  <td>400</td>
  <td>26</td>
</tr>
</table>

Количество столбцов в таблице определяется числом ячеек в каждой строке.

Объединение столбцов достигается с помощью атрибута colspan в элементах td или th — ячейка растягивается вправо, охватывая последующие столбцы.

<table>
  <tr>
    <th colspan="2">Жиры (г)</th>
  </tr>
  <tr>
    <td>Насыщенные жиры (г)</td>
    <td>Ненасыщенные жиры (г)</td>
  </tr>
</table>
В каждой строке должно быть одинаковое число ячеек или равнозначный элемент colspan.

Диапазоны строк, объединенные при помощи атрибута rowspan, ведут себя точно так же, как объединенные диапазоны столбцов, с той лишь разницей, что диапазон ячеек задается сверху вниз и охватывает несколько строк.

<table>
  <tr>
    <th rowspan="3">Порции</th>
    <td>Маленькая (150 г.)</td>
  </tr>
  <tr>
    <td>Средняя (250 г.)</td>
  </tr>
  <tr>
    <td>Большая (2400 г)</td>
  </tr>
</table>

Существует возможность группировать строки таблицы тегами
<thead> - для заголовка,
<tfoot> - нижний колонтитул таблицы,
<tbody> - основной контент таблицы

Они не являются обязательными, но их рекомендуется использовать. Они дают частям таблицы семантический смысл.

<tfoot> в коде можно расположить перед <tbody> или после него, но браузеры всегда выводят его в конце таблицы.
<thead> и <tfoot> можно использовать только по одному разу в одной таблице, а количество <tbody> может быть любым. С помощью нескольких <tbody> можно разделить контент таблицы на смысловые части.

Название таблицы можно разместить в теге <caption>. Этот тег располагают внутри тега <table> в самом начале, перед тегами <thead>, <tfoot>, <tbody>

Веб-формы

Формы вставляются на веб-страницы посредством элемента form. Он представляет собой контейнер для всего содержимого формы, включая такие элементы, как текстовые поля и кнопки, а также блочные элементы (например, h1, р и списки). Однако он не может содержать в себе другой элемент form.

Тип отображения по умолчанию block (блочный элемент). Данный тег имеет два обязательных атрибута: action и method.
В атрибуте action указывается ссылка на обработчик формы. Обработчиком формы является PHP файл (или файл, написанный на других языках программирования), который будет обрабатывать данные этой формы.
Атрибут method предназначен для указания метода отправки данных на сервер (GET или POST).

Большинство элементов добавляется в форму с помощью элемента input. Функции и внешний вид элемента input меняются в зависимости от значения атрибута type. В спецификации HTML5 используется 23 различных элемента формы. Далее мы рассмотрим основные элементы. 

<input type="text"> - Однострочное текстовое поле
<textarea rows="4" cols="50">
  Озеро Байкал – огромное древнее озеро в горах Сибири к северу от монгольской границы. Байкал считается самым глубоким озером в мире. Он окружен сетью пешеходных маршрутов, называемых Большой байкальской тропой. Деревня Листвянка, расположенная на западном берегу озера, – популярная отправная точка для летних экскурсий. Зимой здесь можно кататься на коньках и собачьих упряжках.
</textarea>

Атрибуты rows и cols применяются для определения размера элемента textarea с помощью разметки, но чаще всего размер текстового поля задается с помощью CSS. Атрибут rows указывает, сколько строк должно отображаться в текстовой области, а атрибут cols определяет ширину в количестве символов. Если пользователь вводит больше текста, чем помещается в отведенное пространство, появится ползунок полосы прокрутки.

<input type="password"> - Поля для ввода пароля
Поле ввода пароля работает точно так же, как обычное текстовое, с той лишь разницей, что при вводе символы заменяются на звездочки (*), маркеры (•) или какие-либо другие устанавливаемые браузером значки.
Важно отметить, что, несмотря на то, что символы в поле ввода пароля не видны обычному пользователю, сама эта информация формой не шифруется, поэтому такое поведение не должно расцениваться как мера защиты информации.

Поля ввода текста в HTML5
Ниже приведен полный список доступных в HTML5 типов поля input:
<input type="checkbox"> Флажок.
<input type="color"> Виджет для выбора цвета.
<input type="date"> Поле для ввода календарной даты (год, месяц, день).
<input type="datetime"> Поле для ввода даты и времени.
<input type="datetime-local"> Поле для ввода даты и местного времени.
<input type="email"> Поле для ввода адреса электронной почты.
<input type="file"> Поле для ввода имени файла, который пересылается на сервер.
<input type="hidden"> Скрытое поле (не отображается на Web-странице). Используется для технических целей, например, для того, чтобы передать на сервер системный идентификатор пользователя в системе.
<input type="image"> Графическая кнопка отправки данных формы на сервер. Вместе с этим значением нужно использовать атрибут src, чтобы определить адрес изображения и атрибут alt для определения альтернативного текста. Можно также задать атрибуты width и height, чтобы определить размер изображения в пикселях.
<input type="month"> Поле для ввода месяца и года.
<input type="number"> Поле для ввода чисел.
<input type="password"> Поле для ввода пароля.
<input type="radio"> Переключатели (радио-кнопки). Выбрать можно только один вариант. Атрибут checked указывает, что вариант выбран по умолчанию.
<input type="range"> Ползунок для ввода чисел в указанном диапазоне. Если соответствующие атрибуты не указаны, то значения по умолчанию:
<input type="search"> Поле для ввода строки поиска.
<input type="tel"> Поле для ввода номера телефона.
<input type="text"> Текстовое поле.
<input type="time"> Поле для ввода времени.
<input type="url"> Поле для ввода Web-адреса.
<input type="week"> Поле для ввода номера недели и года.

Не все браузеры поддерживают новые поля ввода спецификации HTML5 или поддерживают их одинаково, но хорошей новостью является то, что, если поле ввода не распознано браузером, по умолчанию вместо него отображается универсальное поле ввода текста, которое прекрасно работает.
































































