###
==============================
Код возврата последней выполненной команды всегда сохраняется в переменной
окружения Bash с именем '?'. Для вывода её значения используйте команду 'echo $?'.
==============================
Команда переименовывает все файлы с расширением .txt в .md в текущей директории и подкаталогах. 

mv "document.txt" "${1%.txt}.md"

% — оператор, удаляющий кратчайшее совпадение с указанным шаблоном (.txt) с конца строки.
==============================
Нулевой байт (null byte, \0) — это специальный символ с ASCII-кодом 0, который используется в программировании и Unix-системах как маркер конца строки или разделитель данных. В контексте Bash и обработки текста он часто применяется для безопасной работы с именами файлов и строками, содержащими пробелы, переводы строк и другие "проблемные" символы.

Не все утилиты поддерживают \0:

 - find с -print0 и xargs с -0 — поддерживают.
 - Старые версии Bash или некоторые команды могут не работать с нулевым байтом.
==============================
Управляющие символы в Bash — это специальные символы, которые интерпретируются оболочкой (Bash) особым образом. Они используются для управления выполнением команд, перенаправления ввода/вывода, группировки операций и других задач.
------------------------------
Вот основные категории и примеры:
------------------------------
1. Разделители команд

Позволяют выполнять несколько команд в одной строке:

; — выполнить команды последовательно:
echo "Hello"; echo "World"  # Вывод: Hello → World

& — запустить команду в фоновом режиме:
sleep 10 &  # Запуск sleep в фоне

| (pipe) — передать вывод одной команды на вход другой:
ls | grep ".txt"  # Вывести список файлов .txt
------------------------------
2. Логические операторы (&& и ||)
------------------------------
3. Перенаправление ввода/вывода (>, >>, <)
------------------------------
4. Подстановки (*,?)
------------------------------
5. Управление процессами

sleep 100 &
echo "PID: $!"  # Выведет PID процесса sleep
------------------------------
6. Экранирование символов

   \ — экранирует следующий символ:
   echo "Цена: \$100"  # Вывод: Цена: $100

   ' ' (одинарные кавычки) — отключают интерпретацию всех символов внутри:
   echo '$USER *'  # Вывод: $USER *

   " " (двойные кавычки) — интерпретируют переменные, но экранируют управляющие символы:
   echo "User: $USER"  # Вывод: User: username
------------------------------
7. Группировка команд
  
   () — выполнить команды в подоboлочке (subshell):
   (cd /tmp && ls)  # Переход в /tmp и вывод списка файлов (не влияет на текущую сессию)

   {} — выполнить команды в текущей оболочке:
   { echo "Start"; ls; } > log.txt  # Группировка с перенаправлением вывода.
==============================
