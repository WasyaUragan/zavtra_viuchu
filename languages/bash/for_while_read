==============================
Операторы цикла
==============================
Оператор цикла многократно повторяет один и тот же блок команд. Однократное выполнение этого блока называется итерацией цикла. На каждой итерации проверяется условие цикла. В зависимости от результата, цикл продолжается или прекращается.
==============================
Холостой цикл
==============================
Холостой цикл — реализация ожидания в компьютерной программе, в котором проверка определённого условия осуществляется в бесконечном цикле. Выход из бесконечного цикла происходит только при удовлетворении проверяемого условия.

Также холостой цикл может использоваться для создания произвольной задержки выполнения программы.

В большинстве случаев холостой цикл считается антипаттерном, которого нужно избегать путём реорганизации кода или использование иного подхода к разработке (асинхронное выполнение, событийно-ориентированное программирование и т. п.).
------------------------------
Примеры холостых циклов в Bash:

1. Классический вариант с while true или ":"

# while :; do (: - встроенная команда, которая всегда возвращает true)
while true; do
    echo "Цикл выполняется..."
    sleep 1
done

2. Через for без условий

for ((;;)); do
    echo "Вечный цикл"
    sleep 1
done
------------------------------
Для чего применяются холостые циклы?

1. Демоны и сервисы
Программы, работающие в фоновом режиме (например, сетевые серверы):

while true; do
    # Ожидание подключений
    nc -l -p 8080 -c "echo 'HTTP/1.1 200 OK\n\nHello World'"
done

2. Мониторинг в реальном времени
Постоянная проверка состояния системы:

while :; do
    clear
    echo "===== Мониторинг ====="
    top -bn1 | head -5
    sleep 2
done

3. Обработка событий
Чтение логов или файловых изменений:

tail -f /var/log/syslog | while read line; do
    if [[ "$line" =~ "ERROR" ]]; then
        echo "Найдена ошибка: $line"
    fi
done

4. Повторные попытки
Повтор операции до успеха:

while true; do
    if ping -c1 google.com; then
        echo "Сеть доступна!"
        break
    else
        echo "Повторная попытка через 5 сек..."
        sleep 5
    fi
done

5. Интерактивные интерфейсы
Меню управления:

while :; do
    echo "1. Запустить"
    echo "2. Остановить"
    echo "3. Выход"
    read -p "Выберите: " choice
    
    case $choice in
        1) start_service;;
        2) stop_service;;
        3) break;;
        *) echo "Неверный вариант";;
    esac
    sleep 1
done

6. Ожидание условий
Ожидание доступности ресурса:

while true; do
    if [[ -f /tmp/ready.flag ]]; then
        echo "Файл появился!"
        break
    fi
    sleep 1
done
------------------------------
Как прервать холостой цикл?

1. Изнутри: break или exit

2. Извне:
   - Ctrl+C (отправляет SIGINT)
   - kill <PID> (сигнал TERM)
------------------------------
Важные нюансы

Всегда добавляйте задержку в длительные циклы, без sleep цикл может потреблять 100% ядра CPU.

Холостой цикл — мощный инструмент для задач, требующих постоянной активности, но требует аккуратного использования чтобы избежать проблем с производительностью.
------------------------------
Альтернативы

Для системных демонов лучше использовать специализированные инструменты:

- systemd для сервисов
- inotifywait для отслеживания файлов
- cron для периодических задач
==============================
