######################################################################################
and — логическое умножение
--------------------------------------------------------------------------------------
блок кода выполняется только при выполнении обоих условий одновременно!
a	b	a and b
False	False	False
False	True	False
True	False	False
True	True	True
--------------------------------------------------------------------------------------
and может объединять произвольное количество условий
======================================================================================
or — логическое сложение
--------------------------------------------------------------------------------------
для выполнения блока кода достаточно выполнения хотя бы одного из условий
a	b	a or b
False	False	False
False	True	True
True	False	True
True	True	True
======================================================================================
Можно использовать and и or одновременно
======================================================================================
not — логическое отрицание
--------------------------------------------------------------------------------------
позволяет инвертировать (т.е. заменить на противоположный) результат логического выражения
--------------------------------------------------------------------------------------
if not (age < 12): эквивалентен if age >= 12:
--------------------------------------------------------------------------------------
a	not a
False	True
True	False
======================================================================================
Приоритеты:
1) not - отрицание
2) and - умножение
3) or - сложение
Для явного указания порядка выполнения условных операторов используют скобки.
======================================================================================
Необходимо явно записывать условия:
if age >= 7 and age <= 9 
эквивалентен
if 7 <= age <= 9: Последний код предпочтительнее
--------------------------------------------------------------------------------------
and и or, вычисляются по укороченной схеме.
--------------------------------------------------------------------------------------
Вот как это работает с оператором and. Если условие слева от оператора and является ложным, то условие справа от него не проверяется, так как результат выражения будет гарантированно ложным и проверка оставшегося условия — пустая трата процессорного времени.
--------------------------------------------------------------------------------------
Аналогично работает оператор or. Если условие слева от оператора or истинное, то условие справа от него не проверяется. Действительно, результат будет гарантированно истинным и проверка оставшегося условия станет пустой тратой процессорного времени.
======================================================================================
Алгебра логики.
--------------------------------------------------------------------------------------
AND сравнимо с умножением.
1)Если первое утверждение истинно, а второе ложно, то результат - 1 * 0 = 0 (ложь).
2)Если же, наоборот, первое ложно, а второе - истинно, то результат - 0 * 1 = 0 (тоже ложь).
3)Если оба неверны, то результат - 0 * 0 = 0 (опять ложь).
4)Если оба верны, то результат - 1 * 1 = 1 (истина).
--------------------------------------------------------------------------------------
OR можно сравнить со сложением, где максимальное значение - 1. Рассмотрим 4 возможных случая.
1)Если первое утверждение истинно, а второе ложно, то результат - 1 + 0 = 1 (истина).
2)Если же, наоборот, первое ложно, а второе - истинно, то результат - 0 + 1 = 1 (истина).
3)Если оба верны, то результат - 1 + 1 = 1 (не забываем про максимальное значение), то есть снова истина.
4)Если оба неверны, то результат - 0 + 0 = 0 (ложь).
======================================================================================










